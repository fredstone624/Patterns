// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Repository.Persistence.Contexts;

namespace Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Domain.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "3fdaec2a-be17-4c3c-b50e-72ff0eec2440",
                            Description = "Desc 1",
                            Name = "Album 1"
                        },
                        new
                        {
                            Id = "b392f290-0e40-44a5-962b-4093cc31f65d",
                            Description = "Desc 2 new",
                            Name = "Album 2"
                        });
                });

            modelBuilder.Entity("Repository.Domain.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PhotoId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = "1eca8c4c-c7c0-447f-9287-f451c0520c28",
                            PhotoId = "462e23ca-f944-49f2-bcb5-4be963b1a327",
                            Url = "https://avatars.mds.yandex.net/get-pdb/1105309/b26948f0-22ce-41a3-a690-770e9cbf92ce/s1200"
                        },
                        new
                        {
                            Id = "bdbb4f26-ae4b-4a29-a5b0-8ae4fad81845",
                            PhotoId = "e2193657-e924-4967-99ce-adc3d0daa9de",
                            Url = "https://avatars.mds.yandex.net/get-pdb/805781/e9f31bb4-e65d-4ccf-8a5f-36b74d8a75be/s1200"
                        });
                });

            modelBuilder.Entity("Repository.Domain.Models.Photo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlbumId");

                    b.Property<string>("ImageId");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = "462e23ca-f944-49f2-bcb5-4be963b1a327",
                            AlbumId = "3fdaec2a-be17-4c3c-b50e-72ff0eec2440",
                            ImageId = "1eca8c4c-c7c0-447f-9287-f451c0520c28"
                        },
                        new
                        {
                            Id = "e2193657-e924-4967-99ce-adc3d0daa9de",
                            AlbumId = "3fdaec2a-be17-4c3c-b50e-72ff0eec2440",
                            ImageId = "bdbb4f26-ae4b-4a29-a5b0-8ae4fad81845"
                        });
                });

            modelBuilder.Entity("Repository.Domain.Models.Photo", b =>
                {
                    b.HasOne("Repository.Domain.Models.Album", "Album")
                        .WithMany("Photos")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Repository.Domain.Models.Image", "Image")
                        .WithOne("Photo")
                        .HasForeignKey("Repository.Domain.Models.Photo", "ImageId");
                });
#pragma warning restore 612, 618
        }
    }
}